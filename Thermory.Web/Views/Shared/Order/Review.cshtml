@using Thermory.Domain.Constants
@using Thermory.Domain.Enums
@using Thermory.Web.Models
@model OrderReview
@{
    var orderType = Model.Order.OrderType.Name;
    var controller = string.Format("{0}Order", orderType);
}

<h3>
    <strong>@orderType Order @Model.Order.OrderNumber</strong>
    @if (Model.Order.OrderStatus.OrderStatusEnum == OrderStatuses.Deleted)
    {
        <span class="label label-danger"><span class="glyphicon @Model.Order.OrderStatus.GlyphiconClass"></span> @Model.Order.OrderStatus.Name</span>
    }
</h3>
<nav class="navbar navbar-default" style="padding: 0 10px 5px 10px; margin: 10px 0 10px 0;">
    <table>
        <tr>
            @foreach (var status in Model.OrderStatuses.Where(s => s.SortOrder > 0))
            {
                if (status.SortOrder <= Model.Order.OrderStatus.SortOrder)
                {
                    <td style="text-align: center;"><h2 style="margin: 0;"><span class="glyphicon glyphicon-ok-circle glyphicon-success"></span></h2></td>
                }
                else if (status.SortOrder == Model.Order.OrderStatus.SortOrder + 1)
                {
                    <td style="text-align: center;"><h2 style="margin: 0;"><span class="glyphicon glyphicon-download glyphicon-warning"></span></h2></td>
                }
                else
                {
                    <td style="text-align: center;"><h2 style="margin: 0;"><span class="glyphicon glyphicon-ban-circle glyphicon-default"></span></h2></td>
                }
            }
        </tr>
        <tr>
            @foreach (var status in Model.OrderStatuses.Where(s => s.SortOrder > 0))
            {
                if (status.SortOrder <= Model.Order.OrderStatus.SortOrder)
                {
                    <td>
                        <span class="label label-success"><span class="glyphicon @status.GlyphiconClass"></span> @status.Name</span>
                    </td>
                }
                else if (status.SortOrder == Model.Order.OrderStatus.SortOrder + 1)
                {
                    <td>
                        <span class="label label-warning"><span class="glyphicon @status.GlyphiconClass"></span> @status.Name</span>
                    </td>
                }
                else
                {
                    <td>
                        <span class="label label-default"><span class="glyphicon @status.GlyphiconClass"></span> @status.Name</span>
                    </td>
                }
            }
        </tr>
    </table>
</nav>
<div id="worksheetPanel">
    <div style="margin-bottom: 10px;">
        @if (Model.Order.OrderStatus.OrderStatusEnum != OrderStatuses.Deleted)
        {
            if (User.IsInRole(Role.InventoryMaster))
            {
                <div type="button" class="btn btn-primary" onclick="window.location = ('@Url.Action("Edit", controller, new RouteValueDictionary {{"id", Model.Order.Id}})'); ">
                    <span class="glyphicon glyphicon-edit"></span> Edit
                </div>
            }
            if (Model.Order.OrderStatus.OrderStatusEnum == OrderStatuses.InTransit && User.IsInRole(Role.InventoryMaster))
            {
                <div type="button" class="btn btn-success" onclick="receiveOrder();">
                    <span class="glyphicon glyphicon-log-in"></span> Received
                </div>
            }
            if (Model.Order.OrderStatus.OrderStatusEnum == OrderStatuses.SentToWarehouse && User.IsInRole(Role.WarehouseCrew))
            {
                <div type="button" class="btn btn-success" onclick="warehouseReceivedOrder();">
                    <span class="glyphicon glyphicon-log-in"></span> Warehouse Received
                </div>
            }
            if (Model.Order.OrderStatus.OrderStatusEnum == OrderStatuses.Pulled && (User.IsInRole(Role.InventoryMaster) || User.IsInRole(Role.WarehouseCrew)))
            {
                if (Model.Order.PackagingType == null)
                {
                    <div type="button" class="btn btn-success disabled">
                        <span class="glyphicon glyphicon-list-alt"></span> Create packaging slip(s)
                    </div>
                }
                else
                {
                    <div type="button" class="btn btn-success" onclick="window.location=('@Url.Action("Package", "SalesOrder")/@Model.Order.Id');">
                        <span class="glyphicon glyphicon-list-alt"></span> Create packaging slip(s)
                    </div>
                }
            }
            if (User.IsInRole(Role.InventoryMaster))
            {
                <div type="button" class="btn btn-danger" id="deleteButton" data-toggle="confirmation">
                    <span class="glyphicon glyphicon-trash"></span> Delete
                </div>
            }
        }
        <div type="button" class="btn btn-info" onclick="window.location = ('@Url.Action("index", controller)');">
            <span class=" glyphicon glyphicon-arrow-left"></span> Back
        </div>
        @if (Model.Order.OrderStatus.OrderStatusEnum == OrderStatuses.Pulled && User.IsInRole(Role.InventoryMaster) && Model.Order.PackagingType == null)
        {
            <div id="errorPanel" class="alert alert-danger" role="alert" style="margin-top: 14px;">
                <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                <span>You must edit the order and choose the packaging type before creating packaging slips.</span>
            </div>
        }
    </div>
    <ul class="nav nav-tabs" data-tabs="tabs">
        <li class="active"><a href="#orderDetails" data-toggle="tab">Details</a></li>
        <li><a href="#orderSummary" data-toggle="tab">Summary</a></li>
        @if (Model.Order.OrderType.OrderTypeEnum == OrderTypes.SalesOrder)
        {
            <li><a href="#orderRatings" data-toggle="tab">Ratings</a></li>
            if (Model.Order.Packages.Any())
            {
                <li><a href="#packingSlips" data-toggle="tab">Packing Slips</a></li>
            }
        }
        <li><a href="#orderTransactions" data-toggle="tab">Transactions</a></li>
    </ul>
    <div class="tab-content" style="height: 400px; overflow-y: scroll;">
        <div id="orderDetails" class="tab-pane active" style="padding-bottom: 10px;">
            @if (!string.IsNullOrEmpty(Model.Order.Notes))
            {
                <div class="row">
                    <div class="col-md-2"><h5><strong>Notes:</strong></h5></div>
                    <div class="col-md-10"><h5>@Model.Order.Notes</h5></div>
                </div>
                <hr style="margin: 5px 0 -2px 0;" />
            }
            @if (Model.Order.Customer != null)
            {
                <div class="row">
                    <div class="col-md-2"><h5><strong>Customer:</strong></h5></div>
                    <div class="col-md-10"><h5>@Model.Order.Customer.Name</h5></div>
                </div>
                if (Model.Order.ShipToAddress != null)
                {
                    if (!string.IsNullOrEmpty(Model.Order.ShipToAddress.AddressLine1))
                    {
                        <div class="row">
                            <div class="col-md-2">&nbsp;</div>
                            <div class="col-md-10"><h5>@Model.Order.ShipToAddress.AddressLine1</h5></div>
                        </div>
                    }
                    if (!string.IsNullOrEmpty(Model.Order.ShipToAddress.AddressLine2))
                    {
                        <div class="row">
                            <div class="col-md-2">&nbsp;</div>
                            <div class="col-md-10"><h5>@Model.Order.ShipToAddress.AddressLine2</h5></div>
                        </div>
                    }
                    <hr style="margin: 5px 0 -2px 0;" />
                }
            }
            @if (@Model.Order.PackagingType != null)
            {
                <div class="row">
                    <div class="col-md-2"><h5><strong>Packaging Type:</strong></h5></div>
                    <div class="col-md-10">
                        <h5>
                            @Model.Order.PackagingType.Name
                            @if (Model.Order.PackagingType.Weight != null)
                            {
                                <span>(@Model.Order.PackagingType.Weight lbs)</span>
                            }
                        </h5>
                    </div>
                </div>
                <hr style="margin: 5px 0 -2px 0;" />
            }
            @if (@Model.Order.ShipDate != null)
            {
                <div class="row">
                    <div class="col-md-2"><h5><strong>Ship Date:</strong></h5></div>
                    <div class="col-md-10"><h5>@Model.Order.ShipDate.Value.ToString("MM/dd/yyyy")</h5></div>
                </div>
                <hr style="margin: 5px 0 -2px 0;" />
            }
            @if (Model.Order.OrderStatus.OrderStatusEnum == OrderStatuses.WarehouseReceived)
            {
                <table>
                    <tr>
                        <td style="vertical-align: top;">
                            <h5><strong>Time to pull:</strong></h5>
                        </td>
                        <td>
                            <input type="text" id="hoursToPull" class="form-control numeric" maxlength="2" value="@Model.Order.HoursToPull" style="width: 50px;" />
                        </td>
                        <td>hours</td>
                        <td>
                            <select id="minutesToPull" class="form-control">
                                <option value="0">0</option>
                                <option value="15">15</option>
                                <option value="30">30</option>
                                <option value="45">45</option>
                            </select>
                        </td>
                        <td>minutes</td>
                        <td>
                            <div type="button" class="btn btn-success" onclick="pullOrder();">
                                <span class="glyphicon glyphicon-share-alt"></span> Pulled
                            </div>
                        </td>
                    </tr>
                </table>
                <div id="pullOrderErrorPanel" class="alert alert-danger" role="alert" style="display: none; margin-top: 14px;">
                    <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                    <span class="sr-only">Error:</span>
                    <span id="pullOrderErrorMessage"></span>
                </div>
                <hr style="margin: 5px 0 -2px 0;" />
            }
            @if (Model.Order.OrderStatus.OrderStatusEnum == OrderStatuses.PackagingSlipCreated)
            {
                <table>
                    <tr>
                        <td style="vertical-align: top;">
                            <h5><strong>Time to load:</strong></h5>
                        </td>
                        <td>
                            <input type="text" id="hoursToLoad" class="form-control numeric" maxlength="2" value="@Model.Order.HoursToLoad" style="width: 50px;" />
                        </td>
                        <td>hours</td>
                        <td>
                            <select id="minutesToLoad" class="form-control">
                                <option value="0">0</option>
                                <option value="15">15</option>
                                <option value="30">30</option>
                                <option value="45">45</option>
                            </select>
                        </td>
                        <td>minutes</td>
                        <td>
                            <div type="button" class="btn btn-success" onclick="loadOrder();">
                                <span class="glyphicon glyphicon-share-alt"></span> Loaded
                            </div>
                        </td>
                    </tr>
                </table>
                <div id="loadOrderErrorPanel" class="alert alert-danger" role="alert" style="display: none; margin-top: 14px;">
                    <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                    <span class="sr-only">Error:</span>
                    <span id="loadOrderErrorMessage"></span>
                </div>
                <hr style="margin: 5px 0 -2px 0;" />
            }
        </div>
        <div id="orderSummary" class="tab-pane">
            @{
                @Html.Partial("Order/_LumberProductReview", Model.Order)
                @Html.Partial("Order/_MiscellaneousProductReview", Model.Order)
            }
        </div>
        @if (Model.Order.OrderType.OrderTypeEnum == OrderTypes.SalesOrder)
        {
            <div id="orderRatings" class="tab-pane">
                <table class="table table-condensed table-striped" style="margin-top: 0;">
                    <colgroup>
                        <col style="width: 30%;" />
                        <col style="width: 70%;" />
                    </colgroup>
                    <tr>
                        <td>Total Pieces</td>
                        <td>@Model.Order.TotalPieces.ToString("n0")</td>
                    </tr>
                    <tr>
                        <td>Total Linear Feet</td>
                        <td>@Model.Order.TotalLinearFeet.ToString("n0")</td>
                    </tr>
                    <tr>
                        <td>Total Square Feet</td>
                        <td>@Model.Order.TotalSquareFeet.ToString("n0")</td>
                    </tr>
                    <tr>
                        <td>Time To Pull</td>
                        <td>@Model.Order.HoursToPull hours @Model.Order.MinutesToPullRemainder minutes</td>
                    </tr>
                    <tr>
                        <td>Pieces Pulled Per Hour</td>
                        <td>@Model.Order.PiecesPulledPerHour.ToString("n0")</td>
                    </tr>
                    <tr>
                        <td>Linear Feet Pulled Per Hour</td>
                        <td>@Model.Order.LinearFeetPulledPerHour.ToString("n0")</td>
                    </tr>
                    <tr>
                        <td>Square Feet Pulled Per Hour</td>
                        <td>@Model.Order.SquareFeetPulledPerHour.ToString("n0")</td>
                    </tr>
                    <tr>
                        <td>Time To Load</td>
                        <td>@Model.Order.HoursToLoad hours @Model.Order.MinutesToLoadRemainder minutes</td>
                    </tr>
                    <tr>
                        <td>Pieces Loaded Per Hour</td>
                        <td>@Model.Order.PiecesLoadedPerHour.ToString("n0")</td>
                    </tr>
                    <tr>
                        <td>Linear Feet Loaded Per Hour</td>
                        <td>@Model.Order.LinearFeetLoadedPerHour.ToString("n0")</td>
                    </tr>
                    <tr>
                        <td>Square Feet Loaded Per Hour</td>
                        <td>@Model.Order.SquareFeetLoadedPerHour.ToString("n0")</td>
                    </tr>
                    <tr>
                        <td>Total Time to Pull and Load</td>
                        <td>@Model.Order.HoursToPullAndLoad hours @Model.Order.MinutesToPullAndLoadRemainder minutes</td>
                    </tr>
                    <tr>
                        <td>Pieces Pulled and Loaded Per Hour</td>
                        <td>@Model.Order.PiecesPulledAndLoadedPerHour.ToString("n0")</td>
                    </tr>
                    <tr>
                        <td>Linear Feet Loaded Per Hour</td>
                        <td>@Model.Order.LinearFeetPulledAndLoadedPerHour.ToString("n0")</td>
                    </tr>
                    <tr>
                        <td>Square Feet Loaded Per Hour</td>
                        <td>@Model.Order.SquareFeetPulledAndLoadedPerHour.ToString("n0")</td>
                    </tr>
                </table>
            </div>
            if (Model.Order.Packages.Any())
            {
                <div id="packingSlips" class="tab-pane">
                    @if (User.IsInRole(Role.InventoryMaster) || User.IsInRole(Role.WarehouseCrew))
                    {
                        <div class="btn-group">
                            <div style="padding: 5px 5px 10px 5px;">
                                <div type="button" class="btn btn-primary" onclick="window.location=('@Url.Action("Package", "SalesOrder")/@Model.Order.Id');">
                                    <span class="glyphicon glyphicon-repeat"></span> Recreate Packaging Slip(s)
                                </div>
                                <div class="btn btn-primary packingSlipView" onclick="editPackingSlipDimensions();">
                                    <span class="glyphicon glyphicon-edit"></span> Edit Packaging Slip Dimensions
                                </div>
                            </div>
                        </div>
                    }
                    <div id="packageErrorPanel" class="alert alert-danger" role="alert" style="display: none; margin-top: 14px;">
                        <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                        <span class="sr-only">Error:</span>
                        <span id="packageErrorMessage"></span>
                    </div>
                    <form class="form-inline">
                        @foreach (var package in Model.Order.Packages.OrderBy(p => p.PackageNumber))
                        {
                            <div class=" btn btn-warning" onclick="window.open('/PackingSlip/Index/?orderId=@Model.Order.Id&packageNumber=@package.PackageNumber', '_blank'); ">
                                <span class="glyphicon glyphicon-print"></span> View @Model.Order.PackagingType.Name @package.PackageNumber
                            </div>
                            <div class="form-group packingSlipView">
                                <span id="@string.Format("package{0}Dimensions", package.PackageNumber)">@package.Dimensions</span>
                            </div>
                            <div class="form-group packingSlipForm" style="display: none;">
                                <input type="hidden" id="@string.Format("package{0}Id", package.PackageNumber)" value="@package.Id" />
                                <input type="hidden" id="@string.Format("package{0}OrderId", package.PackageNumber)" value="@package.OrderId" />
                                <input type="text" id="@string.Format("package{0}Height", package.PackageNumber)" class="numeric" style="width: 100px;" value="@package.Height" />
                                x
                                <input type="text" id="@string.Format("package{0}Length", package.PackageNumber)" class="numeric" style="width: 100px;" value="@package.Length" />
                                x
                                <input type="text" id="@string.Format("package{0}Width", package.PackageNumber)" class="numeric" style="width: 100px;" value="@package.Width" />
                            </div>
                            <br class="packingSlipView" />
                            <br />
                        }
                        <div class="form-group packingSlipForm" style="display: none;">
                            <div class="btn btn-success" onclick="updatePackingSlipDimensions();">
                                <span class="glyphicon glyphicon-ok"></span> Save
                            </div>
                            <div class="btn btn-danger" onclick="showPackingSlipDimensions();">
                                <span class="glyphicon glyphicon-remove"></span> Cancel
                            </div>
                        </div>
                    </form>
                </div>
            }
        }
        <div id="orderTransactions" class="tab-pane">
            <br />
            @foreach (var transaction in Model.InventoryTransactions)
            {
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <strong>@transaction.TransactionType.Description by @transaction.CreatedBy.FullName</strong>
                        <em>@transaction.CreatedOn</em>
                        @if (transaction.LumberTransactionDetails.Any() || transaction.MiscellaneousTransactionDetails.Any())
                        {
                            <a style="cursor: pointer" data-toggle="collapse" data-target="#@transaction.Id">Details</a>
                        }
                    </div>
                    @if (transaction.LumberTransactionDetails.Any() || transaction.MiscellaneousTransactionDetails.Any())
                    {
                        <div id="@transaction.Id" class="panel-body collapse" style="padding-top: 0; padding-bottom: 0;">
                            @if (transaction.LumberTransactionDetails.Any())
                            {
                                var model = new LumberTransactionDetails { AdjustmentMultiplier = Model.Order.AdjustmentMultiplier, Details = transaction.LumberTransactionDetails };
                                @Html.Partial("Order/_LumberTransactionDetails", model)
                            }
                            @if (transaction.MiscellaneousTransactionDetails.Any())
                            {
                                var model = new MiscellaneousTransactionDetails { AdjustmentMultiplier = Model.Order.AdjustmentMultiplier, Details = transaction.MiscellaneousTransactionDetails };
                                @Html.Partial("Order/_MiscellaneousTransactionDetails", model)
                            }
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

<div id="deletingPanel" style="display: none;">Deleting...</div>
<div id="orderTransitioningPanel" style="display: none;">Transitioning order status...</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('.numeric').keydown(rejectNonNumericText);
        $('#deleteButton').confirmation({
            onConfirm: deleteOrder,
            title: "If you delete an order by mistake you will have to create a new order. Are you sure you want to delete this order?"
        });
    });

    function deleteOrder() {
        $('#worksheetPanel').hide();
        $('#deletingPanel').show();

        var order = {
            Id: '@Model.Order.Id',
            OrderNumber: '@Model.Order.OrderNumber',
            OrderType: { Name: '@Model.Order.OrderType.Name' },
            OrderStatus: { Name: '@Model.Order.OrderStatus.Name' }
        };
        var orderJson = JSON.stringify(order);
        var postData = '{"order": ' + orderJson + '}';

        $.ajax({
            type: 'POST',
            url: '@Url.Action("Delete", controller)',
            contentType: 'application/json',
            dataType: 'json',
            data: postData,
            success: function (data, status, request) {
                window.location = ('@Url.Action("Index", controller)');
            },
            error: function (data, status, request) {
                $('#worksheetPanel').show();
                $('#deletingPanel').hide();
            }
        });
    }

    function receiveOrder() {
        transitionOrder('@Url.Action("Receive", controller)', getOrder());
    }

    function warehouseReceivedOrder() {
        transitionOrder('@Url.Action("WarehouseReceived", controller)', getOrder());
    }

    function pullOrder() {
        $('#pullOrderErrorPanel').hide();
        var hoursTaken = parseInt($('#hoursToPull').val());
        var minutesTaken = parseInt($('#minutesToPull').val());
        var totalMinutes = hoursTaken * 60 + minutesTaken;

        if (isNaN(totalMinutes) || totalMinutes == 0) {
            $('#pullOrderErrorMessage').text('You must enter the time taken to pull the order.');
            $('#pullOrderErrorPanel').show();
            return;
        }

        var order = getOrder();
        order.MinutesToPull = totalMinutes;
        transitionOrder('@Url.Action("Pulled", controller)', order);
    }

    function loadOrder() {
        $('#loadOrderErrorPanel').hide();
        var hoursTaken = parseInt($('#hoursToLoad').val());
        var minutesTaken = parseInt($('#minutesToLoad').val());
        var totalMinutes = hoursTaken * 60 + minutesTaken;

        if (isNaN(totalMinutes) || totalMinutes == 0) {
            $('#loadOrderErrorMessage').text('You must enter the time taken to load the order.');
            $('#loadOrderErrorPanel').show();
            return;
        }

        var order = getOrder();
        order.MinutesToLoad = totalMinutes;
        transitionOrder('@Url.Action("Loaded", controller)', order);
    }

    function validate(action, totalMintes) {
        if (isNaN(totalMinutes) || totalMinutes == 0) {
            $('#' + action + 'OrderErrorMessage').text('You must enter the time taken to ' + action + ' the order.');
            $('#' + action + 'OrderErrorPanel').show();
            return false;
        }
        return true;
    }

    function getOrder() {
        return {
            Id: '@Model.Order.Id',
            OrderNumber: '@Model.Order.OrderNumber',
            OrderType: { Name: '@Model.Order.OrderType.Name' },
            OrderStatus: { Name: '@Model.Order.OrderStatus.Name' }
        };
    }

    function transitionOrder(url, order) {
        $('#worksheetPanel').hide();
        $('#orderTransitioningPanel').show();

        var orderJson = JSON.stringify(order);
        var postData = '{"order": ' + orderJson + '}';

        $.ajax({
            type: 'POST',
            url: url,
            contentType: 'application/json',
            dataType: 'json',
            data: postData,
            success: function (data, status, request) {
                location.reload();
            },
            error: function (data, status, request) {
                $('#worksheetPanel').show();
                $('#orderTransitioningPanel').hide();
            }
        });
    }

    function editPackingSlipDimensions() {
        $('.packingSlipView').hide();
        $('.packingSlipForm').show();
    }

    function showPackingSlipDimensions() {
        $('.packingSlipView').show();
        $('.packingSlipForm').hide();
    }

    function updatePackingSlipDimensions() {
        $('#packageErrorPanel').hide();
        showPackingSlipDimensions();

        var packages = new Array();
        for (var i = 1; i <= @Model.Order.Packages.Count; i++){
            packages.push({
                Id: $('#package' + i + 'Id').val(),
                OrderId: $('#package' + i + 'OrderId').val(),
                PackageNumber: i,
                Height: $('#package' + i + 'Height').val(),
                Length: $('#package' + i + 'Length').val(),
                Width: $('#package' + i + 'Width').val()
            });
            var dimensions = $('#package' + i + 'Height').val() + ' x ' + $('#package' + i + 'Length').val() + ' x ' + $('#package' + i + 'Width').val();
            console.log(dimensions);
            $('#package' + i + 'Dimensions').text(dimensions);
        }
        var packagesJson = JSON.stringify(packages);
        var postData = '{"packages" : ' + packagesJson + '}';

        console.log(postData);

        $.ajax({
            type: 'POST',
            url: '@Url.Action("UpdatePackages", "SalesOrder")',
            contentType: 'application/json',
            dataType: 'json',
            data: postData,
            success: function (data, status, request) {
            },
            error: function (data, status, request) {
                console.log(data);
                console.log(status);
                console.log(request);
                $('#packageErrorMessage').html('<span>' + data.responseText.replace('\n', ' <br/> ') + '</span>');
                $('#packageErrorPanel').show();
            }
        });
    }
</script>
