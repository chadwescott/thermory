@using Thermory.Domain.Enums
@model Thermory.Web.Models.OrderForm
@{
    var firstCategoryId = Model.LumberOrderForms.First().LumberCategory.Id;
    var action = Model.Order.Id == Guid.Empty ? "Create" : "Edit";
    var title = string.Format("{0} {1} Order {2}", action, Model.Order.OrderType.Name, Model.Order.OrderNumber);
    var orderId = Model.Order == null ? Guid.Empty : Model.Order.Id;
    var controller = string.Format("{0}Order", Model.Order.OrderType.Name);
    var cancelUrl = Model.Order.Id == Guid.Empty
        ? Url.Action("Index", controller)
        : Url.Action("Review", controller, new RouteValueDictionary { { "id", Model.Order.Id } });
    var shipDate = Model.Order.ShipDate == null ? null : Model.Order.ShipDate.Value.ToString("MM/dd/yyyy");
}

<h3><strong>@title</strong></h3>
<div id="errorPanel" class="alert alert-danger" role="alert" style="display: none; margin-top: 14px;">
    <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
    <span class="sr-only">Error:</span>
    <span id="errorMessage"></span>
</div>
<div id="worksheetPanel">
    <table>
        <tr>
            <td>
                <label for="orderNumber">Order Number</label>
            </td>
            <td colspan="2">
                <input type="text" id="orderNumber" class="form-control" value="@Model.Order.OrderNumber" />
            </td>
        </tr>
        <tr>
            <td>
                <label for="notes">Notes</label>
            </td>
            <td colspan="2">
                <input type="text" id="notes" class="form-control" value="@Model.Order.Notes" />
            </td>
        </tr>
        <tr>
            <td style="vertical-align: top;">
                <label for="customerId">Customer</label>
            </td>
            <td>
                <select id="customerId" class="form-control" onchange="customerChanged();">
                    <option value="@Guid.Empty" selected="selected">Add New</option>
                    @foreach (var customer in Model.Customers)
                    {
                        var selected = customer.Id == Model.Order.CustomerId ? " selected=\"selected\"" : "";
                        <option value="@customer.Id" @selected>@customer.Name</option>
                    }
                </select>
            </td>
            <td>
                <input type="text" id="customerName" class="form-control" />
            </td>
        </tr>
        <tr>
            <td rowspan="3" style="vertical-align: top;">
                <label>Address</label>
            </td>
            <td>
                @foreach (var customer in Model.Customers)
                {
                    var showAddressCss = customer.Id == Model.Order.CustomerId ? "" : "display: none;";
                    <div id="@string.Format("{0}AddressSelector", customer.Id)" class="addressSelector" style="@showAddressCss">
                        <select id="@string.Format("{0}AddressId", customer.Id)" class="form-control" onchange="addressChanged('@customer.Id');">
                            <option value="@Guid.Empty" selected="selected">Add New</option>
                            @foreach (var address in customer.Addresses)
                            {
                                var selected = address.Id == Model.Order.ShipToAddressId ? " selected=\"selected\"" : "";
                                <option value="@address.Id" addressline1="@address.AddressLine1" addressline2="@address.AddressLine2" @selected>@address.Name</option>
                            }
                        </select>
                    </div>
                }
            </td>
            <td>
                <input type="text" id="addressName" class="form-control" />
            </td>
        </tr>
        <tr>
            <td>
                <label for="addressLine1">Address Line 1</label>
            </td>
            <td>
                <input type="text" id="addressLine1" class="form-control" />
            </td>
        </tr>
        <tr>
            <td>
                <label for="addressLine2">Address Line 2</label>
            </td>
            <td>
                <input type="text" id="addressLine2" class="form-control" />
            </td>
        </tr>
        @if (Model.Order.OrderType.OrderTypeEnum == OrderTypes.SalesOrder)
        {
            <tr>
                <td rowspan="2" style="vertical-align: top;">
                    <label for="packagingTypeId">Packaging Type</label>
                </td>
                <td>
                    <select id="packagingTypeId" class="form-control" onchange="packagingTypeChanged();">
                        <option value="@Guid.Empty" selected="selected">Add New</option>
                        @foreach (var packagingType in Model.PackagingTypes)
                        {
                            var selected = packagingType.Id == Model.Order.PackagingTypeId ? " selected=\"selected\"" : "";
                            <option value="@packagingType.Id" weight="@packagingType.Weight" @selected>@packagingType.Name</option>
                        }
                    </select>
                </td>
                <td>
                    <input type="text" id="packagingTypeName" class="form-control" />
                </td>
            </tr>
            <tr>
                <td>
                    <label for="packagingTypeWeight">Weight (lbs)</label>
                </td>
                <td>
                    <input type="text" id="packagingTypeWeight" class="form-control numeric" />
                </td>
            </tr>
        }
        <tr>
            <td>
                <label for="shipDate">Ship Date</label>
            </td>
            <td>
                <table>
                    <tr>
                        <td>
                            <input type="text" id="shipDate" class="form-control datefield" readonly="readonly" style="background-color: white; color: black; cursor: pointer;" value="@shipDate" />
                        </td>
                        <td>
                            <span class="badge danger"><span class="glyphicon glyphicon-remove" onclick="clearShipDate();" style="cursor: pointer;"></span></span>
                        </td>
                    </tr>
                </table>
            </td>
            <td>&nbsp;</td>
        </tr>
    </table>
    <br />
    <div type="button" class="btn btn-success" onclick="saveOrder();">
        <span class="glyphicon glyphicon-ok"></span> Save
    </div>
    <div type="button" class="btn btn-danger" onclick="window.location = '@cancelUrl';">
        <span class=" glyphicon glyphicon-remove"></span> Cancel
    </div>
    <br />
    <br />
    <ul class="nav nav-tabs" data-tabs="tabs">
        @{
            foreach (var orderForm in Model.LumberOrderForms)
            {
                var category = orderForm.LumberCategory;
                var active = category.Id == firstCategoryId ? "class=active" : "";
                <li @active><a href="#@orderForm.LumberCategory.Id" data-toggle="tab">@category.Name</a></li>
            }
            foreach (var category in Model.MiscellaneousOrderForms.Select(orderForm => orderForm.MiscellaneousCategory))
            {
                <li><a href="#@category.Id" data-toggle="tab">@category.Name</a></li>
            }
        }
    </ul>
    <div class="tab-content">
        @{
            foreach (var orderForm in Model.LumberOrderForms)
            {
                var category = orderForm.LumberCategory;
                var active = category.Id == firstCategoryId ? "active" : "";
                <div id="@category.Id" class="tab-pane @active">
                    @Html.Partial("Order/_LumberLineItemForm", orderForm)
                </div>
            }
            foreach (var orderForm in Model.MiscellaneousOrderForms)
            {
                var category = orderForm.MiscellaneousCategory;
                <div id="@category.Id" class="tab-pane">
                    @Html.Partial("Order/_MiscellaneousLineItemForm", orderForm)
                </div>
            }
        }
    </div>
    <div type="button" class="btn btn-success" onclick="saveOrder();">
        <span class="glyphicon glyphicon-ok"></span> Save
    </div>
    <div type="button" class="btn btn-danger" onclick="window.location = '@cancelUrl';">
        <span class=" glyphicon glyphicon-remove"></span> Cancel
    </div>
</div>

<div id="savingPanel" style="display: none;">Saving...</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('.datefield').datepicker({ dateFormat: "mm/dd/yy" });
        $('.numeric').keydown(rejectNonNumericText);
        customerChanged();
        packagingTypeChanged();
    });

    function getOrderStatus() {
        return {
            Id: '@Model.Order.OrderStatus.Id',
            Name: '@Model.Order.OrderStatus.Name',
        };
    }

    function getOrderType() {
        return {
            Id: '@Model.Order.OrderType.Id',
            Name: '@Model.Order.OrderType.Name'
        };
    }

    function clearShipDate() {
        $('#shipDate').val(null);
    }

    function saveOrder() {
        var lumberProducts = getInventory('lumber');
        var miscProducts = getInventory('misc');

        if (lumberProducts.length == 0 && miscProducts == 0) {
            $('#errorMessage').text('No quantities were entered so the order will not be saved.');
            $('#errorPanel').show();
            return;
        }

        $('#worksheetPanel').hide();
        $('#savingPanel').show();
        $('#errorPanel').hide();

        var orderNumber = $('#orderNumber').val();
        var notes = $('#notes').val();
        var shipDate = $('#shipDate').val();

        var order = {
            Id: '@orderId',
            OrderNumber: orderNumber,
            OrderTypeId: '@Model.Order.OrderType.Id',
            OrderType: getOrderType(),
            OrderStatusId: '@Model.Order.OrderStatusId',
            OrderStatus: getOrderStatus(),
            Notes: notes,
            Customer: getCustomer(),
            PackagingType: getPackagingType(),
            ShipDate: shipDate
        };

        var orderJson = JSON.stringify(order);
        var lumberJson = JSON.stringify(lumberProducts);
        var miscJson = JSON.stringify(miscProducts);

        var postData = '{"order" : ' + orderJson + ', "lumberOrderQuantities" : ' + lumberJson + ', "miscOrderQuantities" : ' + miscJson + '}';

        $.ajax({
            type: 'POST',
            url: '@Url.Action("Save", controller)',
            contentType: 'application/json',
            dataType: 'json',
            data: postData,
            success: function (data, status, request) {
                window.location = ('/@controller/Review/' + data);
            },
            error: function (data, status, request) {
                $('#errorMessage').html('<span>' + data.responseText.replace('\n', ' <br/> ') + '</span>');
                $('#errorPanel').show();
                $('#worksheetPanel').show();
                $('#savingPanel').hide();
            }
        });
    }
</script>
