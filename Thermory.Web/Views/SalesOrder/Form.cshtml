@model Thermory.Web.Models.OrderForm
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var firstCategoryId = Model.LumberOrderForms.First().LumberCategory.Id;
    var action = Model.Order.Id == Guid.Empty ? "Create" : "Edit";
    var orderNumber = Model.Order.Id == Guid.Empty ? "" : Model.Order.OrderNumberString;
    var title = string.Format("{0} Sales Order {1}", action, orderNumber);
    var orderId = Model.Order == null ? Guid.Empty : Model.Order.Id;
}

<h3><strong>@title</strong></h3>
<br />
<div id="errorPanel" class="alert alert-danger" role="alert" style="display: none;">
    <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
    <span class="sr-only">Error:</span>
    <span id="errorMessage"></span>
</div>
<div id="worksheetPanel">
    @Html.Partial("Order/_CustomerSelector", Model)
    <br />
    @Html.Partial("Order/_PackagingTypeSelector", Model)
    <br />
    <div type="button" class="btn btn-success" onclick="saveOrder();">
        <span class="glyphicon glyphicon-ok"></span> Save
    </div>
    <div type="button" class="btn btn-danger" onclick="window.location = ('@Url.Action("Review", "SalesOrder", new RouteValueDictionary { { "id", Model.Order.Id } })');">
        <span class=" glyphicon glyphicon-remove"></span> Cancel
    </div>
    <br />
    <br />
    <ul class="nav nav-tabs" data-tabs="tabs">
        @{
            foreach (var orderForm in Model.LumberOrderForms)
            {
                var category = orderForm.LumberCategory;
                var active = category.Id == firstCategoryId ? "class=active" : "";
                <li @active><a href="#@orderForm.LumberCategory.Id" data-toggle="tab">@category.Name</a></li>
            }
            foreach (var category in Model.MiscellaneousOrderForms.Select(orderForm => orderForm.MiscellaneousCategory))
            {
                <li><a href="#@category.Id" data-toggle="tab">@category.Name</a></li>
            }
        }
    </ul>
    <div class="tab-content">
        @{
            foreach (var orderForm in Model.LumberOrderForms)
            {
                var category = orderForm.LumberCategory;
                var active = category.Id == firstCategoryId ? "active" : "";
                <div id="@category.Id" class="tab-pane @active">
                    @Html.Partial("Order/_LumberLineItemForm", orderForm)
                </div>
            }
            foreach (var orderForm in Model.MiscellaneousOrderForms)
            {
                var category = orderForm.MiscellaneousCategory;
                <div id="@category.Id" class="tab-pane">
                    @Html.Partial("Order/_MiscellaneousLineItemForm", orderForm)
                </div>
            }
        }
    </div>
    <div type="button" class="btn btn-success" onclick="saveOrder();">
        <span class="glyphicon glyphicon-ok"></span> Save
    </div>
    <div type="button" class="btn btn-danger" onclick="window.location = ('@Url.Action("Review", "SalesOrder", new RouteValueDictionary { { "id", Model.Order.Id } })');">
        <span class=" glyphicon glyphicon-remove"></span> Cancel
    </div>
</div>

<div id="savingPanel" style="display: none;">Saving...</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('input[name=lumberQty],[name=miscQty]').keydown(rejectNonNumericText);
    });

    function saveOrder() {
        var lumberProducts = getInventory('lumber');
        var miscProducts = getInventory('misc');

        if (lumberProducts.length == 0 && miscProducts == 0) {
            return;
        }

        $('#worksheetPanel').hide();
        $('#savingPanel').show();
        $('#errorPanel').hide();

        var customer = getCustomer();
        var packagingType = getPackagingType();
        var customerJson = JSON.stringify(customer);
        var packagingTypeJson = JSON.stringify(packagingType);
        var lumberJson = JSON.stringify(lumberProducts);
        var miscJson = JSON.stringify(miscProducts);

        var postData = '{"orderType" : "@Model.OrderType", "orderId" : "@orderId", "customer" : ' + customerJson + ', "packagingType" : ' + packagingTypeJson + ', "lumberOrderQuantities" : ' + lumberJson + ', "miscOrderQuantities" : ' + miscJson + '}';

        $('#worksheetPanel').show();
        $('#savingPanel').hide();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("Save", "SalesOrder")',
            contentType: 'application/json',
            dataType: 'json',
            data: postData,
            success: function (data, status, request) {
                window.location = ('/SalesOrder/Review/' + data);
            },
            error: function (data, status, request) {
                $('#errorMessage').text(data.responseText);
                $('#errorPanel').show();
                $('#worksheetPanel').show();
                $('#savingPanel').hide();
            }
        });
    }

    function getInventory(prefix) {
        var products = new Array();
        var query = 'input[name=\'' + prefix + 'Qty\']';
        $(query).each(function () {
            var id = $(this).attr('id');
            var productId = $(this).attr('productId');
            var qty = $(this).val();

            if (qty > 0) {
                products.push(createProductLineItem(id, productId, qty));
            }
        });
        return products;
    }

    function createProductLineItem(id, productId, qty) {
        return {
            Id: id,
            ProductId: productId,
            Quantity: qty
        };
    }
</script>